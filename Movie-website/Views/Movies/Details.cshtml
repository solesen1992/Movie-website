@model Movie_website.Models.Movie
@{
    // The ViewBag holds whether the movie is in the user's wishlist.
    // This is cast to a nullable boolean and defaults to false if no value is set.
    var isInWishlist = ViewBag.IsInWishlist as bool? ?? false;
}

<div class="text-white detail-container-mobile" style="background-image: url('@Model.BackdropUrl'); background-size: cover; padding: 4rem; min-height: 80vh;">
    <div class="container bg-dark bg-opacity-75 rounded p-4">
        <div class="row">
            <!-- This section creates a responsive image container for the movie's poster. -->
            <div class="row-cols-12 col-sm-12 col-md-12 col-lg-4 text-center">
                <!-- Display the movie's poster with responsive sizing and rounded corners. -->
                <img src="@Model.PosterUrl" class="img-fluid rounded shadow mx-auto d-block" />
            </div>

            <!-- This section displays the movie details, including the title, description, genres, and buttons. -->
            <div class="row-cols-12 col-sm-12 col-md-12 col-lg-8 container-mobile-tablet">

                <!-- Display the movie title and release year. -->
                <h1>@Model.Title (@Model.ReleaseYear)</h1>

                <!-- Display the movie's overview or description. -->
                <p>@Model.Overview</p>

                <!-- Display the genres for the movie, joined by a comma. -->
                <p><strong>Genres:</strong> @string.Join(", ", Model.Genres.Select(g => g.Name))</p>

                <!-- Display the Wishlist button with different actions based on whether the movie is in the wishlist. -->
                <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                    @if (isInWishlist)
                    {
                        <!-- This form removes the movie from the wishlist. -->
                        <form method="post" action="/Wishlist/Remove">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button class="btn btn-danger">Remove from wishlist</button>
                        </form>
                    }
                    else
                    {
                        <!-- This form adds the movie to the wishlist. -->
                        <form method="post" action="/Wishlist/Add">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button class="btn btn-success">Add to wishlist</button>
                        </form>
                    }
                </div>

                <!-- If a trailer is available, embed a YouTube video player to display it. -->
                @if (Model.Videos?.Results?.Any(v => v.Type == "Trailer" && v.Site == "YouTube") == true)
                {
                    var trailer = Model.Videos.Results.First(v => v.Type == "Trailer" && v.Site == "YouTube");
                    <div class="mt-4">
                        <!-- Embed the trailer from YouTube using its key for the video URL. -->
                        <iframe width="100%" height="315" src="https://www.youtube.com/embed/@trailer.Key" frameborder="0" allowfullscreen></iframe>
                    </div>
                }

                <!-- Display the cast members of the movie. -->
                @if (Model.Credits?.Cast != null && Model.Credits.Cast.Any())
                {
                    <div class="mt-4">
                        <h5>Cast</h5>
                        <ul>
                            @foreach (var actor in Model.Credits.Cast.Take(5)) // Display only the first 5 actors in the cast.
                            {
                                <!-- Display the actor's name and their character in the movie. -->
                                <li>@actor.Name som @actor.Character</li>
                            }
                        </ul>
                    </div>
                }

                <!-- Display the crew members, specifically directors. -->
                @if (Model.Credits?.Crew != null)
                {
                    var directors = Model.Credits.Crew.Where(c => c.Job == "Director").ToList();

                    if (directors.Any())
                    {
                        <div class="mt-4">
                            <!-- Display the word "Directors" or "Director" based on the number of directors. -->
                            <h5>Crew@((directors.Count > 1) ? "er" : "")</h5>
                            <ul>
                                @foreach (var dir in directors)
                                {
                                    <!-- Display each director's name. -->
                                    <li>@dir.Name</li>
                                }
                            </ul>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>