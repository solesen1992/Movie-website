@model Movie_website.Models.Series
@{
    // Set the title of the page to be the series name from the model
    ViewData["Title"] = @Model.Name;

    // Get the value of 'IsInWishlist' from ViewBag, and default to false if it's not present
    // Start by assuming the movie is not in the wishlist
    bool isInWishlist = false;

    // Check if ViewBag contains a value for 'IsInWishlist'
    if (ViewBag.IsInWishlist != null)
    {
        // Safely convert it to a boolean
        isInWishlist = (bool)ViewBag.IsInWishlist;
    }
}

<!-- BEGINNING OF CONTENT -->

<div class="text-white" style="background-image: url('@Model.BackdropUrl'); background-size: cover; padding: 4rem; min-height: 80vh;">
    <div class="container bg-dark bg-opacity-75 rounded p-4">
        <div class="row">
            <!-- The following section handles the movie poster image and makes it responsive based on screen size -->
            <div class="row-cols-12 col-sm-12 col-md-12 col-lg-4 text-center">
                <!-- Display the series poster image with responsive sizing, rounded corners, and a shadow effect -->
                <img src="@Model.PosterUrl" class="img-fluid rounded shadow mx-auto d-block" alt="@Model.Name" />
            </div>

            <!-- The following section contains the series details like title, description, genres, trailer, cast, and crew -->
            <div class="row-cols-12 col-sm-12 col-md-12 col-lg-8 container-mobile-tablet">

                <!-- Display the series title and release year -->
                <h1>@Model.Name (@Model.ReleaseYear)</h1>

                <!-- Display the series description (overview) -->
                <p>@Model.Overview</p>

                <!-- Display the genres of the series, joined by a comma -->
                @if (Model.Genres != null && Model.Genres.Count > 0)
                {
                    <p>
                        <strong>Genres:</strong>
                        @{
                            string genreList = "";
                            int index = 0;
                            int totalGenres = Model.Genres.Count;

                            foreach (var genre in Model.Genres)
                            {
                                genreList += genre.Name;

                                // Add comma and space unless it's the last genre
                                if (index < totalGenres - 1)
                                {
                                    genreList += ", ";
                                }

                                index++;
                            }
                        }
                        @genreList
                    </p>
                }

                <!-- Check if a YouTube trailer is available, and display it -->
                @if (Model.Videos != null && Model.Videos.Results != null)
                {
                    Video trailer = null;

                    foreach (var video in Model.Videos.Results)
                    {
                        if (video.Type == "Trailer" && video.Site == "YouTube")
                        {
                            trailer = video;
                            break; // stop after finding the first matching trailer
                        }
                    }

                    if (trailer != null)
                    {
                        <div class="mt-4">
                            <iframe width="100%" height="315"
                                    src="https://www.youtube.com/embed/@trailer.Key"
                                    frameborder="0"
                                    allowfullscreen>
                            </iframe>
                        </div>
                    }
                }

                <!-- Check if the series has cast members, and display the first 5 -->
                @if (Model.Credits != null && Model.Credits.Cast != null && Model.Credits.Cast.Count > 0)
                {
                    <div class="mt-4">
                        <h5>Cast</h5>
                        <ul>
                            @{
                                int count = 0;

                                foreach (var actor in Model.Credits.Cast)
                                {
                                    <li>@actor.Name som @actor.Character</li>;
                                    count++;

                                    if (count == 5)
                                    {
                                        break; // stop after 5 actors
                                    }
                                }
                            }
                        </ul>
                    </div>
                }

                <!-- Check if the series has crew members, and display directors -->
                @if (Model.Credits != null && Model.Credits.Crew != null)
                {
                    List<Crew> directors = new List<Crew>();

                    foreach (var crew in Model.Credits.Crew)
                    {
                        if (crew.Job == "Director")
                        {
                            directors.Add(crew);
                        }
                    }

                    if (directors.Count > 0)
                    {
                        <div class="mt-4">
                            <h5>
                                @if (directors.Count == 1)
                                {
                                    @:Director
                                }
                                else
                                {
                                    @:Directors
                                }
                            </h5>
                            <ul>
                                @foreach (var dir in directors)
                                {
                                    <li>@dir.Name</li>
                                }
                            </ul>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>